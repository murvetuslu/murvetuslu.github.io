<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MİRİVİX</title>
    <description>Mürüvet USLU Kişisel Web Sitesi</description>
    <link>https://murvetuslu.github.io/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 26 Nov 2015 19:57:25 +0200</pubDate>
    <lastBuildDate>Thu, 26 Nov 2015 19:57:25 +0200</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Ssh Parolasiz Baglanti</title>
        <description>&lt;hr&gt;Ssh ile bir sunucu üzerine sürekli bağlantı gerçekleştiriyorsanız sürekli parola girmek çok can sıkıcı bir şey haline gelebilir. Bu gibi durumlarda parola girmeden sunucuya bağlanabilirsiniz. Bu konu hakkında internette İngilizce ve Türkçe doküman bulabilirsiniz; ama bende bloğumda bu konuya değinmek istedim Öncelikle Ssh’ın ne olduğundan bahsettikten sonra parola kullanmadan ssh bağlantısına değineceğim.&lt;br&gt;&lt;br&gt;Ssh, uzakta bulunan sunucuya güvenli erişim sağlayan bir bağlantı protokolüdür. Ssh &quot;Secure Shell&quot; yani &quot;Güvenli Kabuk&quot; anlamına gelir.Uzakta bulunan sunucu ile iletişimi kriptografik kodlama sistemiyle şifreler. Yani ağ üzerindeki iki sistemin güvenilir olmayan bağlantılarını güvenli hale getirir. Bu uygulama sayesinde nerede olursanız olun uzaktaki sunucuya güvenli bir bağlantı sağlayabilirsiniz.&lt;br&gt;&lt;br&gt;Ssh kullanabilmeniz için programa ihtiyacınız vardır. Linux işletim sistemlerinde openssh istemci programı kuruludur ama yoksa kurulması gerekir. Ayrıca openssh sunucu uygulamasının bağlantı kurulacak cihazda kurulması gerekir. Yazımda parolasız ssh bağlantısını gerçekleştirmek için sunucu olarak Linux Mint işletim sistemi, istemci olarak da Kali Linux işletim sistemi yüklü cihazlar üzerinden işlemleri gerçekleştireceğim.&lt;br&gt;&lt;br&gt;&lt;b&gt;Adım 1 ;&lt;/b&gt; Sunucu olarak bağlanacağımız cihazda openssh server kurulu değilse, aşağıdaki gibi openssh server kurulur.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/1-ssh.png&quot; alt=&quot;open server image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;Bu işlemi gerçekleştirdikten sonra sunucuda ssh server&#39;ın çalışma durumunu aşağıdaki gibi kontrol edebiliriz ve çalıştığını görmekteyiz. Eğer kapalıysa service ssh start komutu ile çalıştırmamız gerekir.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/2-ssh.png&quot; alt=&quot;ssh status image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;Normal bir şekilde bağlantı gerçekleştirdiğimizde aşağıdaki gibi parola istediğini görebiliriz.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/3-ssh.jpg&quot; alt=&quot;parolalı baglanti image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;&lt;b&gt;Adım 2 ;&lt;/b&gt; İstemci olarak kullanacağımız cihazda aşağıdaki gibi ssh keygen oluşturulur.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/4-ssh.png&quot; alt=&quot;ssh keygen image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;Keygen oluşturulduğunda public ve private key olarak iki tane key’e sahip oluruz. Bu key’ler iletişimin şifrelenmesini sağlayan key’lerdir.&lt;br&gt;&lt;br&gt;&lt;b&gt;Adım 3 ;&lt;/b&gt; Bağlantı yaparken sürekli parola sormaması için public key’imizi aşağıdaki gibi sunucuya kopyalamamız gerekir. Bu işlem esnasında sunucu üzerinde bağlantı sağlayacağımız kullanıcının parolasını bir kereliğine girmemiz gerekir.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/5-ssh.png&quot; alt=&quot;ssh copyid image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;Sunucu da ~/.ssh/ dizininde authorized_keys adlı bir dosya oluşturur ve public key’imizi bu dosya içerisinde tutar.&lt;br&gt;Sunucuda dosyanın oluştuğunu aşağıdaki resimde de görebiliriz.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/6-ssh.png&quot; alt=&quot;ssh image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;&lt;b&gt;Adım 4 ;&lt;/b&gt; Tüm işlemleri gerçekleştirdikten sonra iki cihaz arasındaki bağlantıyı aşağıdaki gibi gerçekleştirebiliriz.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;/img/portfolio/ssh-parolasiz-baglanti/7-ssh.png&quot; alt=&quot;ssh image&quot; width=&quot;700px&quot;&gt;&lt;br&gt;Resimde de görüldüğü gibi bağlantıyı parolasız bir şekilde gerçekleştirmiş olduk.</description>
        <pubDate>Wed, 25 Nov 2015 00:00:00 +0200</pubDate>
        <link>https://murvetuslu.github.io/2015/11/25/ssh-parolasiz-baglanti/</link>
        <guid isPermaLink="true">https://murvetuslu.github.io/2015/11/25/ssh-parolasiz-baglanti/</guid>
        
        
      </item>
    
      <item>
        <title>Linux Komutları</title>
        <description>&lt;hr&gt;A&#39;dan Z&#39;ye Linux Komutları isimli ilk blog yazımda Linux&#39;u kullanmanızda size faydalı olacak bir döküman hazırlamak istedim. Linux&#39;a geçmeden önce bir çoğumuz Windows işletim sistemini kullandığımız için Linux&#39;ta bazı zorluklar yaşıyoruz. İlk zorluk olarak da terminal kullanımı karşımıza çıkıyor. Linux&#39;u benimsememiz için terminal kullanımına hakim olmamız gerekmekte. Çünkü neredeyse tüm işlemlerinizi terminal üzerinden gerçekleştireceksiniz. Terminalde komutları sürekli olarak kullanmadığınız zaman ise işlevlerini unutabilirsiniz. Ben de bu komutları sizler için bir kitap haline getirdim. Yazabildiğim kadar A&#39;dan Z&#39;ye çoğu komutu yazmaya çalıştım. Gitbook içerisinde oluşturduğum bu kitaba &lt;a href=&quot;https://www.gitbook.com/book/murvetuslu/a-z-linux-komutlari/details&quot; target=&quot;_blank&quot;&gt;buradan&lt;/a&gt; ulaşabilirsiniz. Keyifli okumalar diler, önerilerinizi beklerim. :)</description>
        <pubDate>Fri, 13 Nov 2015 00:00:00 +0200</pubDate>
        <link>https://murvetuslu.github.io/2015/11/13/linux-komutlar%C4%B1/</link>
        <guid isPermaLink="true">https://murvetuslu.github.io/2015/11/13/linux-komutlar%C4%B1/</guid>
        
        
      </item>
    
  </channel>
</rss>
